// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: worker_service.proto

#include "worker_service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
        template <typename>
PROTOBUF_CONSTEXPR AssignWorkRequest::AssignWorkRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.path_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.mode_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.class__)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AssignWorkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssignWorkRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssignWorkRequestDefaultTypeInternal() {}
  union {
    AssignWorkRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssignWorkRequestDefaultTypeInternal _AssignWorkRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AssignWorkReply::AssignWorkReply(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.ok_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AssignWorkReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssignWorkReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssignWorkReplyDefaultTypeInternal() {}
  union {
    AssignWorkReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssignWorkReplyDefaultTypeInternal _AssignWorkReply_default_instance_;
static ::_pb::Metadata file_level_metadata_worker_5fservice_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_worker_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_worker_5fservice_2eproto = nullptr;
const ::uint32_t TableStruct_worker_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::AssignWorkRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::AssignWorkRequest, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::AssignWorkRequest, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::AssignWorkRequest, _impl_.class__),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::AssignWorkReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::AssignWorkReply, _impl_.ok_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::AssignWorkRequest)},
        {11, -1, -1, sizeof(::AssignWorkReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_AssignWorkRequest_default_instance_._instance,
    &::_AssignWorkReply_default_instance_._instance,
};
const char descriptor_table_protodef_worker_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\024worker_service.proto\">\n\021AssignWorkRequ"
    "est\022\014\n\004path\030\001 \001(\t\022\014\n\004mode\030\002 \001(\t\022\r\n\005class"
    "\030\003 \001(\t\"\035\n\017AssignWorkReply\022\n\n\002ok\030\001 \001(\0102E\n"
    "\rWorkerService\0224\n\nAssignWork\022\022.AssignWor"
    "kRequest\032\020.AssignWorkReply\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_worker_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_worker_5fservice_2eproto = {
    false,
    false,
    196,
    descriptor_table_protodef_worker_5fservice_2eproto,
    "worker_service.proto",
    &descriptor_table_worker_5fservice_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_worker_5fservice_2eproto::offsets,
    file_level_metadata_worker_5fservice_2eproto,
    file_level_enum_descriptors_worker_5fservice_2eproto,
    file_level_service_descriptors_worker_5fservice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_worker_5fservice_2eproto_getter() {
  return &descriptor_table_worker_5fservice_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_worker_5fservice_2eproto(&descriptor_table_worker_5fservice_2eproto);
// ===================================================================

class AssignWorkRequest::_Internal {
 public:
};

AssignWorkRequest::AssignWorkRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AssignWorkRequest)
}
AssignWorkRequest::AssignWorkRequest(const AssignWorkRequest& from) : ::google::protobuf::Message() {
  AssignWorkRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){},
      decltype(_impl_.mode_){},
      decltype(_impl_.class__){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), _this->GetArenaForAllocation());
  }
  _impl_.mode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.mode_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mode().empty()) {
    _this->_impl_.mode_.Set(from._internal_mode(), _this->GetArenaForAllocation());
  }
  _impl_.class__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.class__.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_class_().empty()) {
    _this->_impl_.class__.Set(from._internal_class_(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:AssignWorkRequest)
}
inline void AssignWorkRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.path_){},
      decltype(_impl_.mode_){},
      decltype(_impl_.class__){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.path_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.mode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.mode_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.class__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.class__.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
AssignWorkRequest::~AssignWorkRequest() {
  // @@protoc_insertion_point(destructor:AssignWorkRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AssignWorkRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.path_.Destroy();
  _impl_.mode_.Destroy();
  _impl_.class__.Destroy();
}
void AssignWorkRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AssignWorkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:AssignWorkRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.mode_.ClearToEmpty();
  _impl_.class__.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AssignWorkRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 39, 2> AssignWorkRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AssignWorkRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AssignWorkRequest, _impl_.path_)}},
    // string mode = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AssignWorkRequest, _impl_.mode_)}},
    // string class = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AssignWorkRequest, _impl_.class__)}},
  }}, {{
    65535, 65535
  }}, {{
    // string path = 1;
    {PROTOBUF_FIELD_OFFSET(AssignWorkRequest, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mode = 2;
    {PROTOBUF_FIELD_OFFSET(AssignWorkRequest, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string class = 3;
    {PROTOBUF_FIELD_OFFSET(AssignWorkRequest, _impl_.class__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\21\4\4\5\0\0\0\0"
    "AssignWorkRequest"
    "path"
    "mode"
    "class"
  }},
};

::uint8_t* AssignWorkRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AssignWorkRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "AssignWorkRequest.path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string mode = 2;
  if (!this->_internal_mode().empty()) {
    const std::string& _s = this->_internal_mode();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "AssignWorkRequest.mode");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string class = 3;
  if (!this->_internal_class_().empty()) {
    const std::string& _s = this->_internal_class_();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "AssignWorkRequest.class");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AssignWorkRequest)
  return target;
}

::size_t AssignWorkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AssignWorkRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // string mode = 2;
  if (!this->_internal_mode().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mode());
  }

  // string class = 3;
  if (!this->_internal_class_().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_class_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AssignWorkRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AssignWorkRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*AssignWorkRequest::GetClassData() const { return &_class_data_; }


void AssignWorkRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AssignWorkRequest*>(&to_msg);
  auto& from = static_cast<const AssignWorkRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AssignWorkRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_mode().empty()) {
    _this->_internal_set_mode(from._internal_mode());
  }
  if (!from._internal_class_().empty()) {
    _this->_internal_set_class_(from._internal_class_());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AssignWorkRequest::CopyFrom(const AssignWorkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AssignWorkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AssignWorkRequest::IsInitialized() const {
  return true;
}

void AssignWorkRequest::InternalSwap(AssignWorkRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, lhs_arena,
                                       &other->_impl_.path_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mode_, lhs_arena,
                                       &other->_impl_.mode_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.class__, lhs_arena,
                                       &other->_impl_.class__, rhs_arena);
}

::google::protobuf::Metadata AssignWorkRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_worker_5fservice_2eproto_getter, &descriptor_table_worker_5fservice_2eproto_once,
      file_level_metadata_worker_5fservice_2eproto[0]);
}
// ===================================================================

class AssignWorkReply::_Internal {
 public:
};

AssignWorkReply::AssignWorkReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AssignWorkReply)
}
AssignWorkReply::AssignWorkReply(const AssignWorkReply& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AssignWorkReply)
}
inline void AssignWorkReply::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.ok_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
AssignWorkReply::~AssignWorkReply() {
  // @@protoc_insertion_point(destructor:AssignWorkReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AssignWorkReply::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void AssignWorkReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AssignWorkReply::Clear() {
// @@protoc_insertion_point(message_clear_start:AssignWorkReply)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ok_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AssignWorkReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AssignWorkReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AssignWorkReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool ok = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AssignWorkReply, _impl_.ok_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AssignWorkReply, _impl_.ok_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool ok = 1;
    {PROTOBUF_FIELD_OFFSET(AssignWorkReply, _impl_.ok_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AssignWorkReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:AssignWorkReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AssignWorkReply)
  return target;
}

::size_t AssignWorkReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AssignWorkReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool ok = 1;
  if (this->_internal_ok() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AssignWorkReply::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AssignWorkReply::MergeImpl
};
const ::google::protobuf::Message::ClassData*AssignWorkReply::GetClassData() const { return &_class_data_; }


void AssignWorkReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AssignWorkReply*>(&to_msg);
  auto& from = static_cast<const AssignWorkReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AssignWorkReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ok() != 0) {
    _this->_internal_set_ok(from._internal_ok());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AssignWorkReply::CopyFrom(const AssignWorkReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AssignWorkReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AssignWorkReply::IsInitialized() const {
  return true;
}

void AssignWorkReply::InternalSwap(AssignWorkReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.ok_, other->_impl_.ok_);
}

::google::protobuf::Metadata AssignWorkReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_worker_5fservice_2eproto_getter, &descriptor_table_worker_5fservice_2eproto_once,
      file_level_metadata_worker_5fservice_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
